@model DatabaseAccess.ExamMarkTable

@{
    ViewBag.Title = "Create";
}

<script src="~/Scripts/jquery-3.4.1.min.js"></script>


<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Add A New Exam Mark</h6>
    </div>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="row">
                    <div class="col-md-5">
                        <div class="form-group">
                            <input type="number" class="form-control" placeholder="Enter Promote ID" id="promoteid" />
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="form-group">
                            <input type="button" class="btn btn-primary" value="Find" id="FindPromoteRecord" />
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.ExamID, "ExamID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownList("ExamID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ExamID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StudentID, "StudentID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownList("StudentID", null, htmlAttributes: new { @class = "form-control", @id = "StudentID" })
                        @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ClassSubjectID, "Class Subject", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownList("ClassSubjectID", null, htmlAttributes: new { @class = "form-control", @id = "ClassSubjectID" })
                        @Html.ValidationMessageFor(model => model.ClassSubjectID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TotalMarks, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.TotalMarks, new { htmlAttributes = new { @class = "form-control", @id = "TotalMarks" } })
                        @Html.ValidationMessageFor(model => model.TotalMarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ObtainMarks, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.ObtainMarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ObtainMarks, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-success" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-defaut" })

                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('#FindPromoteRecord').click(function () {

            $('#ClassSubjectID').html('');
            $('#StudentID').html('');
            $.ajax({
                url: '@Url.Action("GetByPromoteID", "ExamMarkTables")',
                type: 'GET',
                data: { sid: $('#promoteid').val() },
                dataType: 'Json',
                success: function (response) {
                    $('#StudentID').val(response.student);
                    for (var i = 0; i < response.subject.length; i++) {
                        $('#StudentID').append("<option value=" + response.student[i].StudentID + ">" + response.student[i].Name + "</option>");
                    }
                },
                error: function () {

                }
            });
        });

        $('#ClassSubjectID').change(function () {
            $.ajax({
                url: '@Url.Action("GetTotalMarks", "ExamMarkTables")',
                type: 'GET',
                data: { sid: $(this).val() },
                dataType: 'Json',
                success: function (response) {
                    $('#TotalMarks').val(response.data);
                },
                error: function () {

                }
            });
        });
    });
</script>